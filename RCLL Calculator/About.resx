<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>